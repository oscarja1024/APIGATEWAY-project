openapi: 3.0.3
info:
  title: API Data user Manager HearthStone data - OpenAPI 3.0
  description: |-
    The api to acess the reports and information  generated for and by the user abot their parties in the game.
  termsOfService: http://swagger.io/terms/
  contact:
    email: o.jimenez@edu.uah.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080/api/users
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDataDTO'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
  /{userId}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
  /delete/{userId}:
    delete:
      summary: Delete user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
  /session:
    get:
      summary: Start a new session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessionStartRequest'
      responses:
        '200':
          description: Successful session start
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionResponse'
  /session/{sessionId}:
    delete:
      summary: Delete a session by ID
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Session deleted successfully

components:
  schemas:
    sessionStartRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
        
    sessionResponse:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        expiration:
          type: string

    UserEntity:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        passwd:
          type: string
        session:
          $ref: '#/components/schemas/SessionEntity'

    SessionEntity:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/UserEntity'

    UserDataDTO:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        passwd:
          type: string